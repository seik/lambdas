service: media-converter # NOTE: update this with your service name

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-3'} 
  timeout: 900
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: "arn:aws:s3:::${self:custom.s3-bucket-name-input}/*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.s3-bucket-name-output}/*"
  environment:
    OUTPUT_BUCKET_NAME: "${self:custom.s3-bucket-name-output}"
    INPUT_BUCKET_NAME: "${self:custom.s3-bucket-name-input}"

layers:
  ffmpeg:
    path: layer

functions:
  convert:
    handler: convert.convert
    events:
      - s3: ${self:custom.s3-bucket-name-input}
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - {Ref: FfmpegLambdaLayer}

plugins:
  - serverless-python-requirements

custom:
  s3-bucket-name-input: media-converter-input
  s3-bucket-name-output: media-converter-output

resources:
  Resources:
    S3BucketContainer:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3-bucket-name-output}